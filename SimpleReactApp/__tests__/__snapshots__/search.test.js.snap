// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search component should rendeer correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "filters": Array [],
              "type": "CHANGE_SEARCH_FILTERS",
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Search)
    getQuery={[Function]}
  >
    <Search
      filterInfo={
        Object {
          "buttonList": Array [
            Object {
              "checked": true,
              "field": "title",
              "id": "b1",
              "text": "title",
            },
            Object {
              "checked": false,
              "field": "genres",
              "id": "b2",
              "text": "genre",
            },
          ],
          "title": "search by",
          "type": "CHANGE_SEARCH_FILTERS",
        }
      }
      getQuery={[Function]}
      query=""
      searchButtonText="Search"
    >
      <div>
        <input
          className="search-field"
          onChange={[Function]}
          placeholder="SEARCH"
          type="search"
          value=""
        />
        <button
          className="search-button"
          data-cy="search"
          onClick={[Function]}
        >
          Search
        </button>
      </div>
      <div>
        <Connect(Filter)
          buttons={
            Array [
              Object {
                "checked": true,
                "field": "title",
                "id": "b1",
                "text": "title",
              },
              Object {
                "checked": false,
                "field": "genres",
                "id": "b2",
                "text": "genre",
              },
            ]
          }
          title="search by"
          type="CHANGE_SEARCH_FILTERS"
        >
          <Filter
            buttons={
              Array [
                Object {
                  "checked": true,
                  "field": "title",
                  "id": "b1",
                  "text": "title",
                },
                Object {
                  "checked": false,
                  "field": "genres",
                  "id": "b2",
                  "text": "genre",
                },
              ]
            }
            navigationFilters={
              Object {
                "buttonList": Array [
                  Object {
                    "checked": true,
                    "field": "release_date",
                    "id": "f1",
                    "text": "Release date",
                  },
                  Object {
                    "checked": false,
                    "field": "vote_average",
                    "id": "f2",
                    "text": "rating",
                  },
                ],
                "title": "sort by",
                "type": "CHANGE_NAVIGATION_FILTERS",
              }
            }
            query=""
            searchFilters={
              Object {
                "buttonList": Array [
                  Object {
                    "checked": true,
                    "field": "title",
                    "id": "b1",
                    "text": "title",
                  },
                  Object {
                    "checked": false,
                    "field": "genres",
                    "id": "b2",
                    "text": "genre",
                  },
                ],
                "title": "search by",
                "type": "CHANGE_SEARCH_FILTERS",
              }
            }
            title="search by"
            type="CHANGE_SEARCH_FILTERS"
            updateFilterButtons={[Function]}
          >
            <div
              className="filter-container"
            >
              <div>
                <p>
                  search by
                </p>
              </div>
              <div>
                <FilterButton
                  data={
                    Object {
                      "checked": true,
                      "field": "title",
                      "id": "b1",
                      "text": "title",
                    }
                  }
                  key="b1"
                  toggleChange={[Function]}
                >
                  <label>
                    <input
                      checked={true}
                      data-cy="title"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    title
                  </label>
                </FilterButton>
                <FilterButton
                  data={
                    Object {
                      "checked": false,
                      "field": "genres",
                      "id": "b2",
                      "text": "genre",
                    }
                  }
                  key="b2"
                  toggleChange={[Function]}
                >
                  <label>
                    <input
                      checked={false}
                      data-cy="genre"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    genre
                  </label>
                </FilterButton>
              </div>
            </div>
          </Filter>
        </Connect(Filter)>
      </div>
    </Search>
  </Connect(Search)>
</Provider>
`;

exports[`SearchNavigation component should render correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "filters": Array [],
              "type": "CHANGE_SEARCH_FILTERS",
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(SearchNavigation)>
    <SearchNavigation
      dispatch={
        [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "filters": Array [],
                "type": "CHANGE_SEARCH_FILTERS",
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      filterInfo={
        Object {
          "buttonList": Array [
            Object {
              "checked": true,
              "field": "release_date",
              "id": "f1",
              "text": "Release date",
            },
            Object {
              "checked": false,
              "field": "vote_average",
              "id": "f2",
              "text": "rating",
            },
          ],
          "title": "sort by",
          "type": "CHANGE_NAVIGATION_FILTERS",
        }
      }
    >
      <Connect(Filter)
        buttons={
          Array [
            Object {
              "checked": true,
              "field": "release_date",
              "id": "f1",
              "text": "Release date",
            },
            Object {
              "checked": false,
              "field": "vote_average",
              "id": "f2",
              "text": "rating",
            },
          ]
        }
        title="sort by"
        type="CHANGE_NAVIGATION_FILTERS"
      >
        <Filter
          buttons={
            Array [
              Object {
                "checked": true,
                "field": "release_date",
                "id": "f1",
                "text": "Release date",
              },
              Object {
                "checked": false,
                "field": "vote_average",
                "id": "f2",
                "text": "rating",
              },
            ]
          }
          navigationFilters={
            Object {
              "buttonList": Array [
                Object {
                  "checked": true,
                  "field": "release_date",
                  "id": "f1",
                  "text": "Release date",
                },
                Object {
                  "checked": false,
                  "field": "vote_average",
                  "id": "f2",
                  "text": "rating",
                },
              ],
              "title": "sort by",
              "type": "CHANGE_NAVIGATION_FILTERS",
            }
          }
          query=""
          searchFilters={
            Object {
              "buttonList": Array [
                Object {
                  "checked": true,
                  "field": "title",
                  "id": "b1",
                  "text": "title",
                },
                Object {
                  "checked": false,
                  "field": "genres",
                  "id": "b2",
                  "text": "genre",
                },
              ],
              "title": "search by",
              "type": "CHANGE_SEARCH_FILTERS",
            }
          }
          title="sort by"
          type="CHANGE_NAVIGATION_FILTERS"
          updateFilterButtons={[Function]}
        >
          <div
            className="filter-container"
          >
            <div>
              <p>
                sort by
              </p>
            </div>
            <div>
              <FilterButton
                data={
                  Object {
                    "checked": true,
                    "field": "release_date",
                    "id": "f1",
                    "text": "Release date",
                  }
                }
                key="f1"
                toggleChange={[Function]}
              >
                <label>
                  <input
                    checked={true}
                    data-cy="Release date"
                    onChange={[Function]}
                    type="checkbox"
                  />
                  Release date
                </label>
              </FilterButton>
              <FilterButton
                data={
                  Object {
                    "checked": false,
                    "field": "vote_average",
                    "id": "f2",
                    "text": "rating",
                  }
                }
                key="f2"
                toggleChange={[Function]}
              >
                <label>
                  <input
                    checked={false}
                    data-cy="rating"
                    onChange={[Function]}
                    type="checkbox"
                  />
                  rating
                </label>
              </FilterButton>
            </div>
          </div>
        </Filter>
      </Connect(Filter)>
    </SearchNavigation>
  </Connect(SearchNavigation)>
</Provider>
`;

exports[`SearchPage component should render correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [MockFunction],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <SearchPage
        location={
          Object {
            "search": "",
          }
        }
        store={
          Object {
            "clearActions": [Function],
            "dispatch": [MockFunction],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
        }
        updateFilterButtons={[MockFunction]}
        updateFilterByUrl={[MockFunction]}
        updateFilterUrl={[MockFunction]}
        updateMovies={
          [MockFunction] {
            "calls": Array [
              Array [
                undefined,
                undefined,
                undefined,
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
      >
        <Header>
          <div
            uk-img="true"
          >
            <Connect(Logo)>
              <Logo
                appLogo="netflixroulete"
                dispatch={[MockFunction]}
              >
                <div
                  className="logo"
                >
                  <p>
                    netflixroulete
                  </p>
                </div>
              </Logo>
            </Connect(Logo)>
            <Connect(Search)>
              <Search
                filterInfo={
                  Object {
                    "buttonList": Array [
                      Object {
                        "checked": true,
                        "field": "title",
                        "id": "b1",
                        "text": "title",
                      },
                      Object {
                        "checked": false,
                        "field": "genres",
                        "id": "b2",
                        "text": "genre",
                      },
                    ],
                    "title": "search by",
                    "type": "CHANGE_SEARCH_FILTERS",
                  }
                }
                getQuery={[Function]}
                query=""
                searchButtonText="Search"
              >
                <div>
                  <input
                    className="search-field"
                    onChange={[Function]}
                    placeholder="SEARCH"
                    type="search"
                    value=""
                  />
                  <button
                    className="search-button"
                    data-cy="search"
                    onClick={[Function]}
                  >
                    Search
                  </button>
                </div>
                <div>
                  <Connect(Filter)
                    buttons={
                      Array [
                        Object {
                          "checked": true,
                          "field": "title",
                          "id": "b1",
                          "text": "title",
                        },
                        Object {
                          "checked": false,
                          "field": "genres",
                          "id": "b2",
                          "text": "genre",
                        },
                      ]
                    }
                    title="search by"
                    type="CHANGE_SEARCH_FILTERS"
                  >
                    <Filter
                      buttons={
                        Array [
                          Object {
                            "checked": true,
                            "field": "title",
                            "id": "b1",
                            "text": "title",
                          },
                          Object {
                            "checked": false,
                            "field": "genres",
                            "id": "b2",
                            "text": "genre",
                          },
                        ]
                      }
                      navigationFilters={
                        Object {
                          "buttonList": Array [
                            Object {
                              "checked": true,
                              "field": "release_date",
                              "id": "f1",
                              "text": "Release date",
                            },
                            Object {
                              "checked": false,
                              "field": "vote_average",
                              "id": "f2",
                              "text": "rating",
                            },
                          ],
                          "title": "sort by",
                          "type": "CHANGE_NAVIGATION_FILTERS",
                        }
                      }
                      query=""
                      searchFilters={
                        Object {
                          "buttonList": Array [
                            Object {
                              "checked": true,
                              "field": "title",
                              "id": "b1",
                              "text": "title",
                            },
                            Object {
                              "checked": false,
                              "field": "genres",
                              "id": "b2",
                              "text": "genre",
                            },
                          ],
                          "title": "search by",
                          "type": "CHANGE_SEARCH_FILTERS",
                        }
                      }
                      title="search by"
                      type="CHANGE_SEARCH_FILTERS"
                      updateFilterButtons={[Function]}
                    >
                      <div
                        className="filter-container"
                      >
                        <div>
                          <p>
                            search by
                          </p>
                        </div>
                        <div>
                          <FilterButton
                            data={
                              Object {
                                "checked": true,
                                "field": "title",
                                "id": "b1",
                                "text": "title",
                              }
                            }
                            key="b1"
                            toggleChange={[Function]}
                          >
                            <label>
                              <input
                                checked={true}
                                data-cy="title"
                                onChange={[Function]}
                                type="checkbox"
                              />
                              title
                            </label>
                          </FilterButton>
                          <FilterButton
                            data={
                              Object {
                                "checked": false,
                                "field": "genres",
                                "id": "b2",
                                "text": "genre",
                              }
                            }
                            key="b2"
                            toggleChange={[Function]}
                          >
                            <label>
                              <input
                                checked={false}
                                data-cy="genre"
                                onChange={[Function]}
                                type="checkbox"
                              />
                              genre
                            </label>
                          </FilterButton>
                        </div>
                      </div>
                    </Filter>
                  </Connect(Filter)>
                </div>
              </Search>
            </Connect(Search)>
          </div>
        </Header>
        <Box>
          <div>
            <Connect(SearchNavigation)>
              <SearchNavigation
                dispatch={[MockFunction]}
                filterInfo={
                  Object {
                    "buttonList": Array [
                      Object {
                        "checked": true,
                        "field": "release_date",
                        "id": "f1",
                        "text": "Release date",
                      },
                      Object {
                        "checked": false,
                        "field": "vote_average",
                        "id": "f2",
                        "text": "rating",
                      },
                    ],
                    "title": "sort by",
                    "type": "CHANGE_NAVIGATION_FILTERS",
                  }
                }
              >
                <Connect(Filter)
                  buttons={
                    Array [
                      Object {
                        "checked": true,
                        "field": "release_date",
                        "id": "f1",
                        "text": "Release date",
                      },
                      Object {
                        "checked": false,
                        "field": "vote_average",
                        "id": "f2",
                        "text": "rating",
                      },
                    ]
                  }
                  title="sort by"
                  type="CHANGE_NAVIGATION_FILTERS"
                >
                  <Filter
                    buttons={
                      Array [
                        Object {
                          "checked": true,
                          "field": "release_date",
                          "id": "f1",
                          "text": "Release date",
                        },
                        Object {
                          "checked": false,
                          "field": "vote_average",
                          "id": "f2",
                          "text": "rating",
                        },
                      ]
                    }
                    navigationFilters={
                      Object {
                        "buttonList": Array [
                          Object {
                            "checked": true,
                            "field": "release_date",
                            "id": "f1",
                            "text": "Release date",
                          },
                          Object {
                            "checked": false,
                            "field": "vote_average",
                            "id": "f2",
                            "text": "rating",
                          },
                        ],
                        "title": "sort by",
                        "type": "CHANGE_NAVIGATION_FILTERS",
                      }
                    }
                    query=""
                    searchFilters={
                      Object {
                        "buttonList": Array [
                          Object {
                            "checked": true,
                            "field": "title",
                            "id": "b1",
                            "text": "title",
                          },
                          Object {
                            "checked": false,
                            "field": "genres",
                            "id": "b2",
                            "text": "genre",
                          },
                        ],
                        "title": "search by",
                        "type": "CHANGE_SEARCH_FILTERS",
                      }
                    }
                    title="sort by"
                    type="CHANGE_NAVIGATION_FILTERS"
                    updateFilterButtons={[Function]}
                  >
                    <div
                      className="filter-container"
                    >
                      <div>
                        <p>
                          sort by
                        </p>
                      </div>
                      <div>
                        <FilterButton
                          data={
                            Object {
                              "checked": true,
                              "field": "release_date",
                              "id": "f1",
                              "text": "Release date",
                            }
                          }
                          key="f1"
                          toggleChange={[Function]}
                        >
                          <label>
                            <input
                              checked={true}
                              data-cy="Release date"
                              onChange={[Function]}
                              type="checkbox"
                            />
                            Release date
                          </label>
                        </FilterButton>
                        <FilterButton
                          data={
                            Object {
                              "checked": false,
                              "field": "vote_average",
                              "id": "f2",
                              "text": "rating",
                            }
                          }
                          key="f2"
                          toggleChange={[Function]}
                        >
                          <label>
                            <input
                              checked={false}
                              data-cy="rating"
                              onChange={[Function]}
                              type="checkbox"
                            />
                            rating
                          </label>
                        </FilterButton>
                      </div>
                    </div>
                  </Filter>
                </Connect(Filter)>
              </SearchNavigation>
            </Connect(SearchNavigation)>
          </div>
        </Box>
        <Connect(Main)>
          <Main
            dispatch={[MockFunction]}
            movieList={
              Array [
                Object {
                  "description": "",
                  "genres": Array [
                    "Adventure",
                  ],
                  "id": "1",
                  "image": "../src/images/movie-default.jpg",
                  "release_date": "2022",
                  "runtime": 154,
                  "title": "Not yet...",
                  "vote_average": 5,
                },
                Object {
                  "description": "",
                  "genres": Array [
                    "Horror",
                  ],
                  "id": "2",
                  "image": "../src/images/movie-default.jpg",
                  "release_date": "2020",
                  "runtime": 154,
                  "title": "Soon...",
                  "vote_average": 4,
                },
              ]
            }
          >
            <div
              className="container"
            >
              <div
                className="row"
              >
                <div
                  className="col-lg-3"
                  key="1"
                >
                  <withRouter(Movie)
                    key="1"
                    movie={
                      Object {
                        "description": "",
                        "genres": Array [
                          "Adventure",
                        ],
                        "id": "1",
                        "image": "../src/images/movie-default.jpg",
                        "release_date": "2022",
                        "runtime": 154,
                        "title": "Not yet...",
                        "vote_average": 5,
                      }
                    }
                  >
                    <Movie
                      history={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        }
                      }
                      match={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        }
                      }
                      movie={
                        Object {
                          "description": "",
                          "genres": Array [
                            "Adventure",
                          ],
                          "id": "1",
                          "image": "../src/images/movie-default.jpg",
                          "release_date": "2022",
                          "runtime": 154,
                          "title": "Not yet...",
                          "vote_average": 5,
                        }
                      }
                    >
                      <div
                        className="movie"
                      >
                        <Image>
                          <img />
                        </Image>
                        <Link
                          to="/film/1"
                        >
                          <LinkAnchor
                            href="/film/1"
                            navigate={[Function]}
                          >
                            <a
                              href="/film/1"
                              onClick={[Function]}
                            >
                              Not yet...
                            </a>
                          </LinkAnchor>
                        </Link>
                        <ul>
                          <p
                            key="Not yet...Adventure"
                          >
                            Adventure
                          </p>
                        </ul>
                        <p>
                          2022
                        </p>
                        <p>
                          5
                        </p>
                      </div>
                    </Movie>
                  </withRouter(Movie)>
                </div>
                <div
                  className="col-lg-3"
                  key="2"
                >
                  <withRouter(Movie)
                    key="2"
                    movie={
                      Object {
                        "description": "",
                        "genres": Array [
                          "Horror",
                        ],
                        "id": "2",
                        "image": "../src/images/movie-default.jpg",
                        "release_date": "2020",
                        "runtime": 154,
                        "title": "Soon...",
                        "vote_average": 4,
                      }
                    }
                  >
                    <Movie
                      history={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        }
                      }
                      match={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        }
                      }
                      movie={
                        Object {
                          "description": "",
                          "genres": Array [
                            "Horror",
                          ],
                          "id": "2",
                          "image": "../src/images/movie-default.jpg",
                          "release_date": "2020",
                          "runtime": 154,
                          "title": "Soon...",
                          "vote_average": 4,
                        }
                      }
                    >
                      <div
                        className="movie"
                      >
                        <Image>
                          <img />
                        </Image>
                        <Link
                          to="/film/2"
                        >
                          <LinkAnchor
                            href="/film/2"
                            navigate={[Function]}
                          >
                            <a
                              href="/film/2"
                              onClick={[Function]}
                            >
                              Soon...
                            </a>
                          </LinkAnchor>
                        </Link>
                        <ul>
                          <p
                            key="Soon...Horror"
                          >
                            Horror
                          </p>
                        </ul>
                        <p>
                          2020
                        </p>
                        <p>
                          4
                        </p>
                      </div>
                    </Movie>
                  </withRouter(Movie)>
                </div>
              </div>
            </div>
          </Main>
        </Connect(Main)>
        <Footer>
          <footer>
            <Box>
              <div>
                <Connect(Logo)>
                  <Logo
                    appLogo="netflixroulete"
                    dispatch={[MockFunction]}
                  >
                    <div
                      className="logo"
                    >
                      <p>
                        netflixroulete
                      </p>
                    </div>
                  </Logo>
                </Connect(Logo)>
              </div>
            </Box>
          </footer>
        </Footer>
      </SearchPage>
    </Router>
  </BrowserRouter>
</Provider>
`;
